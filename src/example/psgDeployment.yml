apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      run: postgres
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: postgres
    spec:
      # hostname: db
      containers:
      - image: zoranashura402/database
        imagePullPolicy: IfNotPresent
        name: postgres
        ports:
        - containerPort: 5432
          #resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-pv-claim
      volumes:
      - name: postgres-pv-claim
        persistentVolumeClaim:
          claimName: postgres-pv-claim
status: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: session-service
  name: session-service
spec:
  replicas: 1
  selector:
    matchLabels:
      run: session-service
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: session-service
    spec:
      containers:
      - image: zoranashura402/session
        imagePullPolicy: IfNotPresent
        name: session-service
        envFrom:
          - configMapRef:
              name: session-config 
        command: ["java", "-jar", "/app/app.jar"]
        ports:
        - containerPort: 8081
---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: postgres
  name: db
spec:
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    run: postgres

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: session-service-svc
  name: session
spec:
  ports:
  - port: 8081
    protocol: TCP
    targetPort: 8081
  selector:
    run: session
